#include<fstream>
using namespace std;
ifstream f("rj.in");
ofstream g("rj.out");
int x[102][102],lin[102],col[102],lin1[102],col1[102],w[102][102];
char a[102][102],c;
int main()
{   int n,m,i,j,x1,y1,x2,y2,p,u,p1,u1,tmin=10202,xmin=-1,ymin=-1;
    f>>n>>m;
    for(i=0;i<=n+1;i++) {a[i][0]=a[i][m+1]='X';x[i][0]=x[i][m+1]=-1;w[i][0]=w[i][m+1]=-1;}
    for(j=0;j<=m+1;j++) {a[0][j]=a[n+1][j]='X'; x[0][j]=x[n+1][j]=-1;w[0][j]=w[n+1][j]=-1;}
    f.get(c);
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=m;j++)
        {f.get(c);a[i][j]=c;
        if(a[i][j]=='R') {x1=i;y1=j;}
        if(a[i][j]=='J') {x2=i;y2=j;}
        if(a[i][j]==' ') {x[i][j]=w[i][j]=0;}
        if(a[i][j]=='X') {x[i][j]=w[i][j]=-1;}
        }
        f.get(c);
    }
    x[x1][y1]=1; lin[1]=x1;col[1]=y1;
    p=1; u=1;
    while(p<=u)
    {
        i=lin[p];j=col[p];
        if(i>1&&x[i-1][j]==0)
        {
            x[i-1][j]=x[i][j]+1; u++; lin[u]=i-1; col[u]=j;
            //if(lin[u]==x2&&col[u]==y2) break;
        }
        if(i<n&&x[i+1][j]==0)
        {
            x[i+1][j]=x[i][j]+1; u++; lin[u]=i+1; col[u]=j;
             //if(lin[u]==x2&&col[u]==y2) break;
        }
        if(j>1&&x[i][j-1]==0)
        {
            x[i][j-1]=x[i][j]+1; u++; lin[u]=i; col[u]=j-1;
             //if(lin[u]==x2&&col[u]==y2) break;
        }
        if(j<m&&x[i][j+1]==0)
        {
            x[i][j+1]=x[i][j]+1; u++; lin[u]=i; col[u]=j+1;
             //if(lin[u]==x2&&col[u]==y2) break;
        }
        if(i>1&&x[i-1][j+1]==0)
        {
            x[i-1][j+1]=x[i][j]+1; u++; lin[u]=i-1; col[u]=j+1;
             //if(lin[u]==x2&&col[u]==y2) break;
        }
        if(i<n&&x[i+1][j-1]==0)
        {
            x[i+1][j-1]=x[i][j]+1; u++; lin[u]=i+1; col[u]=j-1;
            //if(lin[u]==x2&&col[u]==y2) break;
        }
        if(j>1&&x[i-1][j-1]==0)
        {
            x[i-1][j-1]=x[i][j]+1; u++; lin[u]=i-1; col[u]=j-1;
            //if(lin[u]==x2&&col[u]==y2) break;
        }
        if(j<m&&x[i+1][j+1]==0)
        {
            x[i+1][j+1]=x[i][j]+1; u++; lin[u]=i+1; col[u]=j+1;
            //if(lin[u]==x2&&col[u]==y2) break;
        }
        p++;
    }
    w[x2][y2]=1; lin1[1]=x2; col1[1]=y2; p1=1;u1=1;
    while(p1<=u1)
    {
        i=lin1[p1]; j=col1[p1];
        if(i>1&&w[i-1][j]==0)
        {
            w[i-1][j]=w[i][j]+1; u1++; lin1[u1]=i-1; col1[u1]=j;
           // if(lin1[u1]==x1&&col1[u1]==y1) break;
        }
        if(i<n&&w[i+1][j]==0)
        {
            w[i+1][j]=w[i][j]+1; u1++; lin1[u1]=i+1; col1[u1]=j;
           // if(lin1[u1]==x1&&col1[u1]==y1) break;
        }
        if(j>1&&w[i][j-1]==0)
        {
            w[i][j-1]=w[i][j]+1; u1++; lin1[u1]=i; col1[u1]=j-1;
           // if(lin1[u1]==x1&&col1[u1]==y1) break;
        }
        if(j<m&&w[i][j+1]==0)
        {
            w[i][j+1]=w[i][j]+1; u1++; lin1[u1]=i; col1[u1]=j+1;
           // if(lin1[u1]==x1&&col1[u1]==y1) break;
        }
        if(i>1&&w[i-1][j+1]==0)
        {
            w[i-1][j+1]=w[i][j]+1; u1++; lin1[u1]=i-1; col1[u1]=j+1;
           // if(lin1[u1]==x1&&col1[u1]==y1) break;
        }
        if(i<n&&w[i+1][j-1]==0)
        {
            w[i+1][j-1]=w[i][j]+1; u1++; lin1[u1]=i+1; col1[u1]=j-1;
            //if(lin1[u1]==x1&&col1[u1]==y1) break;
        }
        if(j>1&&w[i-1][j-1]==0)
        {
            w[i-1][j-1]=w[i][j]+1; u1++; lin1[u1]=i-1; col1[u1]=j-1;
           // if(lin1[u1]==x1&&col1[u1]==y1) break;
        }
        if(j<m&&w[i+1][j+1]==0)
        {
            w[i+1][j+1]=w[i][j]+1; u1++; lin1[u1]=i+1; col1[u1]=j+1;
            //if(lin1[u1]==x1&&col1[u1]==y1) break;
        }
        p1++;
    }
    //for(i=1;i<=n;i++)
    //{
    //    for(j=1;j<=m;j++)
     //   g<<x[i][j]<<' ';
     //   g<<'\n';
   // }
   // return 0;
    for(i=1;i<=n;i++)
    {  for(j=1;j<=m;j++)
        {
            if(x[i][j]==w[i][j])
            if(x[i][j]<tmin&&x[i][j]!=-1&&x[i][j]!=0)
            {tmin=x[i][j]; xmin=i; ymin=j;}
        }
    }

    g<<tmin<<' '<<xmin<<' '<<ymin;

}

